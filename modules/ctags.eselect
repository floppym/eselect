# Copyright 1999-2007 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Id: ctags.eselect 614 2007-08-22 18:06:41Z ulm $
#
# DOCUMENTATION
# Following actions possible
# * show		do_show()
# * list		do_list()
# * set			do_set()
# * update		do_update()
#
# Behaviour:
# do_show():
#	Checks if /usr/bin/ctags is a link and if the target exists,
#	if yes, it outputs the currently linked ctags implementation.
#	If it is no symlink, the user is told so, the same if there is
#	no /usr/bin/ctags or the target does not exist.
# do_list(): List all available ctags implementations.
# do_set(): Set a version to be target of the symlink.
# do_update(): Set the target to the "best" available version. See below.

DESCRIPTION="Manage /usr/bin/ctags implementations"
MAINTAINER="emacs@gentoo.org"
SVN_DATE='$Date: 2007-08-22 20:06:41 +0200 (Wed, 22 Aug 2007) $'
VERSION=$(svn_date_to_version "${SVN_DATE}" )

find_targets() {
	# Return the list of available ctags implementations

	# (X)Emacs: offer only one ctags implementation, namely for the
	# currently active Emacs version (selected by emacs.eselect)
	# The logic here is the same as in emacs.eselect, don't change it!
	local emacs
	if [[ -L "${ROOT}/usr/bin/emacs" && \
		  -e $(canonicalise "${ROOT}/usr/bin/emacs") ]]; then
		emacs=$(basename $(canonicalise "${ROOT}/usr/bin/emacs") )
		[[ -f "${ROOT}/usr/bin/ctags-${emacs}" ]] && echo "ctags-${emacs}"
	elif [[ -f "${ROOT}/usr/bin/xemacs" ]]; then
		[[ -f "${ROOT}/usr/bin/ctags-xemacs" ]] && echo ctags-xemacs
	fi

	# Exuberant ctags
	[[ -f "${ROOT}"/usr/bin/exuberant-ctags ]] && echo exuberant-ctags
}

remove_symlinks() {
	# Remove existing symlinks to binary and man page
	rm -f "${ROOT}"/usr/bin/ctags
	rm -f "${ROOT}"/usr/share/man/man1/ctags.1*
}

set_bin_symlinks() {
	# Set symlink to binary
	local target=${1}
	ln -s "${target}" "${ROOT}/usr/bin/ctags" \
		|| die "Couldn't set ${target} ${ROOT}/usr/bin/ctags symlink"
}

set_man_symlinks() {
	# Set symlink to man page
	local target=${1} extension i
	for i in "${ROOT}"/usr/share/man/man1/${target}.1*; do
		if [[ -f ${i} ]]; then
			# target file exists; determine compress extension
			extension=${i##*/${target}.1}
			ln -s "${target}.1${extension}" \
				"${ROOT}/usr/share/man/man1/ctags.1${extension}"
		fi
	done
}

set_symlinks() {
	# Set symlinks to binary and man page
	local target="${1}" targets
	# target may be specified by its name or its index
	if is_number "${target}"; then
		# numeric index, find the target's name
		targets=( $(find_targets) )
		[[ ${target} -ge 1 && ${target} -le ${#targets[@]} ]] \
			|| die -q "Number out of range: ${1}"
		target=${targets[$(( ${target} - 1 ))]}
	fi

	# is the target valid, i.e. does a ctags binary with this name exist?
	[[ -f "${ROOT}/usr/bin/${target}" ]] \
		|| die -q "Target \"${1}\" doesn't appear to be valid!"

	echo "Switching to ${target} ..."
	remove_symlinks || die -q "Couldn't remove existing symlink"
	set_bin_symlinks "${target}"
	set_man_symlinks "${target}"
	return 0
}

test_for_root() {
	# checks if the user has rights to modify /usr/bin/
	[[ -w "${ROOT}/usr/bin" ]] || die -q "You need to be root!"
}

### show action ###

describe_show() {
	echo "Show the current target of the ctags symlink"
}

do_show() {
	[[ ${#@} -gt 0 ]] && die -q "Too many parameters"

	write_list_start "Current target of ctags symlink:"
	if [[ -L "${ROOT}/usr/bin/ctags" && \
		  -e $(canonicalise "${ROOT}/usr/bin/ctags") ]]; then
		write_kv_list_entry \
			$(basename $(canonicalise "${ROOT}/usr/bin/ctags") ) ""
	elif [[ -e "${ROOT}/usr/bin/ctags" ]]; then
		write_kv_list_entry \
			"(not a symlink or target of symlink does not exist)" ""
	else
		write_kv_list_entry "(unset)" ""
	fi
}

### list action ###

describe_list() {
	echo "List available ctags symlink targets"
}

do_list() {
	[[ ${#@} -gt 0 ]] && die -q "Too many parameters"

	local i targets
	targets=( $(find_targets) )

	if [[ -n ${targets[@]} ]]; then
		for (( i = 0; i < ${#targets[@]}; i = i + 1 )); do
			# Display a star to indicate the currently chosen version
			[[ ${targets[${i}]} = \
				$(basename $(canonicalise "${ROOT}/usr/bin/ctags") ) ]] \
				&& targets[${i}]="${targets[${i}]} $(highlight '*')"
		done
		write_list_start "Available ctags symlink targets:"
		write_numbered_list "${targets[@]}"
	else
		write_kv_list_entry "(none found)" ""
	fi
}

### set action ###

describe_set() {
	echo "Set a new ctags symlink"
}

describe_set_options() {
	echo "target : Target name or number (from 'list' action)"
}

describe_set_parameters() {
	echo "<target>"
}

do_set() {
	[[ -z "${1}" ]] && die -q "You didn't tell me what to set the symlink to"
	[[ ${#@} -gt 1 ]] && die -q "Too many parameters"
	test_for_root

	if [[ -e "${ROOT}/usr/bin/ctags" && ! -L "${ROOT}/usr/bin/ctags" ]]; then
		if [[ -f "${ROOT}/usr/bin/ctags" && $(uname) == FreeBSD ]]; then
			# On FreeBSD ctags is a real file, installed by freebsd-ubin
			echo "${ROOT}/usr/bin/ctags is a real file - no action"
			return
		fi
		die -q "Sorry, ${ROOT}/usr/bin/ctags exists but is not a symlink"
	fi

	set_symlinks "${1}" || die -q "Couldn't set a new symlink"
}

### update action ###

describe_update() {
	echo "Automatically update the ctags symlink"
}

do_update() {
	[[ ${#@} -gt 0 ]] && die -q "Too many parameters"
	test_for_root

	local ctags=""
	if [[ -L "${ROOT}/usr/bin/ctags" ]]; then
		ctags=$(basename $(canonicalise "${ROOT}/usr/bin/ctags") )
		if [[ ! -e $(canonicalise "${ROOT}/usr/bin/ctags") ]]; then
			# clean up dead symlinks
			remove_symlinks || die -q "Couldn't remove existing symlink"
		fi
	elif [[ -e "${ROOT}/usr/bin/ctags" ]]; then
		if [[ -f "${ROOT}/usr/bin/ctags" && $(uname) == FreeBSD ]]; then
			# On FreeBSD ctags is a real file, installed by freebsd-ubin
			return
		fi
		die -q "Sorry, ${ROOT}/usr/bin/ctags exists but is not a symlink"
	fi

	# For an "update" only the version should be changed, but not the
	# provider (i.e. Emacs vs Exuberant). At the moment only (X)Emacs
	# offers several concurrent versions.

	local i target targets=( $(find_targets) )
	if [[ ${#targets[@]} -gt 0 ]]; then
		target=${targets[0]}
		[[ "${ctags}" == ctags-*emacs* ]] && ctags="ctags-*emacs*"
		for i in ${targets[@]}; do
			[[ "${i}" == "${ctags}" ]] && target="${i}"
		done
		set_symlinks "${target}" || die -q "Couldn't set a new symlink"
	fi
}
