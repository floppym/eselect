# Copyright 1999-2005 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Id$

inherit config multilib

DESCRIPTION="Manage installed LAPACK implementations"
MAINTAINER="Danny van Dyk <kugelfang@gentoo.org>"
SVN_DATE='$Date$'
VERSION=$(svn_date_to_version "${SVN_DATE}")

LAPACK_CONFIG="${ROOT}/etc/eselect/lapack/lapack.config"
LAPACK_IMPLEMENTATIONS="ACML ATLAS reference"
LAPACK_PROFILES="F77"

# check_* $libdir
# implementation specific check functions
check_ACML() {
	# libacml.so provides FORTRAN 77 support
	[[ -f ${1}/libacml.so ]] && echo "F77"
}

check_ATLAS() {
	[[ -d ${1}/lapack/atlas ]] || return
	[[ -f ${1}/lapack/atlas/liblapack.so ]] && echo "F77"
}

check_reference() {
	[[ -d ${1}/lapack/reference ]] || return
	[[ -f ${1}/lapack/reference/liblapack.so ]] && echo "F77"
}

# package $impl
# Prints the name of the package providing $impl
package() {
	case ${1} in
		ACML)		echo "sci-libs/ACML";;
		ATLAS)		echo "sci-libs/lapack-atlas";;
		MKL)		echo "sci-libs/mkl";;
		reference)	echo "sci-libs/lapack-reference";;
		*) ;;
	esac
}

# is_active_* $lib
# return 0 if $lib points to an active LAPACK implementation of profile *
is_active_ACML() {
	[[ -L ${1} ]] || return 1
	local lib=$(readlink -sn ${1})
	[[ $(basename ${lib}) == libacml.so ]] \
		&& return 0
	return 1
}

is_active_ATLAS() {
	[[ -L ${1} ]] || return 1
	local lib=$(readlink -sn ${1})
	local dir=${lib%/*}
	[[ ${dir##*/} == atlas ]] \
		&& return 0
	return 1
}

is_active_reference() {
	[[ -L ${1} ]] || return 1
	local lib=$(readlink -sn ${1})
	local dir=${lib%/*}
	[[ ${dir##*/} == reference ]] \
		&& return 0
	return 1
}

# setup_* $libdir $profile
# Implementation specific activation/setup functions
setup_ACML() {
	if [[ ${2} == F77 ]] ; then
		ln -sf ${1}/libacml.so ${1}/liblapack.so
		ln -sf ${1}/libacml.so ${1}/liblapack.so.0
		ln -sf ${1}/libacml.a  ${1}/liblapack.a
	else
		die "Illegal profile: ${2}"
	fi
}

setup_ATLAS() {
	if [[ ${2} == F77 ]] ; then
		ln -sf ${1}/lapack/atlas/liblapack.so ${1}/liblapack.so
		ln -sf ${1}/lapack/atlas/liblapack.so ${1}/liblapack.so.0
		ln -sf ${1}/lapack/atlas/liblapack.a  ${1}/liblapack.a
	else
		die "Illegal profile: ${2}"
	fi
}

setup_reference() {
	if [[ ${2} == F77 ]] ; then
		ln -sf ${1}/lapack/reference/liblapack.so ${1}/liblapack.so
		ln -sf ${1}/lapack/reference/liblapack.so ${1}/liblapack.so.0
		ln -sf ${1}/lapack/reference/liblapack.a  ${1}/liblapack.a
	else
		die "Illegal profile: ${2}"
	fi
}

### list action ###

describe_list() {
	echo "List all installed LAPACK implementations"
}

do_list() {
	local libdirs libdir n
	[[ -z "$@" ]] \
		&& libdirs="$(list_libdirs)" \
		|| libdirs="$@"
		
	for libdir in ${libdirs} ; do
		F77_PROFILES=$(load_config ${LAPACK_CONFIG} F77_${libdir})
		if [[ -n ${F77_PROFILES} ]] ; then
			write_list_start "FORTRAN 77 profiles in ${ROOT}/usr/${libdir}"
			n=1
			for x in ${F77_PROFILES} ; do
					active=''
					is_active_${x} ${ROOT}/usr/${libdir}/liblapack.so \
						&& active=' *'
					write_numbered_list_entry \
						$n \
						"${x}$(space $(( 12 - ${#x})))($(package ${x}))$(highlight "${active}")"
					n=$(( n + 1))
			done
			echo
		fi
	done
}

### select action ###

describe_set() {
	echo "Setup one of the installed LAPACK implementations as the active implementation"
}

do_set() {
	local libdirs=$(list_libdirs) profiles=${LAPACK_PROFILES} impl libdir prof
	[[ ${#1} == 0 ]] && die -q "Please specify the implementation to setup as active."
	impl=${1}
	shift
	
	has ${impl} ${LAPACK_IMPLEMENTATIONS} \
		|| die -q "Illegal implementation: ${impl}"

	for param in ${@} ; do
		echo "param: ${param}"
		if has ${param} ${libdirs} ; then
			mylibdirs=(${mylibdirs[@]} ${param})
		elif has ${param} ${LAPACK_PROFILES} ; then
			myprofiles=(${myprofiles[@]} ${param})
		else
			die -q "Illegal parameter: ${param}."
		fi
	done
	[[ -n ${mylibdirs[@]} ]] && libdirs=${mylibdirs[@]}
	[[ -n ${myprofiles[@]} ]] && profiles=${myprofiles[@]}

	write_list_start "Changing LAPACK implementations to $(highlight ${impl}) in"
	echo "  ${libdirs}"
	write_list_start "Affected language interfaces"
	echo "  ${profiles}"
	for libdir in ${libdirs} ; do
		for prof in ${profiles} ; do
			setup_${impl} ${ROOT}/usr/${libdir} ${prof} \
				&& store_config ${LAPACK_CONFIG} \
					"${prof}_${libdir}_CURRENT" ${impl} \
				|| die "Please report this incident!"
		done
	done
}

### show action ###

describe_show() {
	echo "Show the currently active LAPACK implementations"
}

do_show() {
	local libdirs=$(list_libdirs) profiles=${LAPACK_PROFILES} libdir lib prefix
	[[ -n ${1} ]] && has ${1} ${libdirs} ${1} && libdirs=${1}
	[[ -n ${2} ]] && has ${2} ${profiles} ${2} && profiles=${2}
	write_list_start "Active LAPACK implementations"
	for libdir in ${libdirs} ; do
		[[ ${#libdddirs} -eq 1 ]] || prefix="${ROOT}/usr/${libdir}"
		for prof in ${profiles} ; do
			[[ ${prof} == F77 ]] && lib=liblapack.so
			impl=$(load_config ${LAPACK_CONFIG} "${prof}_${libdir}_CURRENT")
			if [[ -z ${impl} ]] ; then
				[[ -n $(load_config ${LAPACK_CONFIG} "${prof}_${libdir}") ]] \
					&& die -q "Configuration file is broken. Please run scan."
			else
				if is_active_${impl} ${ROOT}/usr/${libdir}/${lib} ; then
					write_kv_list_entry "${prefix} (${prof})" "${impl} ($(package ${impl}))"
				else
					die -q "Configuration file is out of date. Please run scan."
				fi
			fi
		done
	done
}

### update action ###

describe_scan() {
	echo "Scans the system for data about all installed LAPACK implementations"
}

do_scan() {
	local lib libdir impl prof
	[[ -e ${ROOT}/etc/eselect/lapack/lapack.config ]] \
		&& rm ${ROOT}/etc/eselect/lapack/lapack.config
	for libdir in $(list_libdirs) ; do
		[[ -e ${ROOT}/usr/${libdir}/ ]] || continue
		for impl in ${LAPACK_IMPLEMENTATIONS} ; do
			for prof in $(check_${impl} ${ROOT}/usr/${libdir}/) ; do
				if has ${prof} ${LAPACK_PROFILES} ; then
					add_config ${LAPACK_CONFIG} "${prof}_${libdir}" ${impl}
					[[ ${prof} == F77 ]] && lib=${ROOT}/usr/${libdir}/liblapack.so
					is_active_${impl} ${lib} \
						&& store_config ${LAPACK_CONFIG} \
							"${prof}_${libdir}_CURRENT" ${impl}
				else
					die -q "Unknown profile: \"${prof}\". Valid profiles: ${LAPACK_PROFILES}"
				fi
			done
		done
	done
}

# vim: set ft=eselect
