# Copyright 1999-2009 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Id$

DESCRIPTION="Manage the /usr/src/linux symlink"
MAINTAINER="eselect@gentoo.org"
SVN_DATE='$Date$'
VERSION=$(svn_date_to_version "${SVN_DATE}")

# find a list of kernel symlink targets
find_targets() {
	local f
	for f in "${ROOT}"/usr/src/linux-[[:digit:]]* ; do
		[[ -d ${f} ]] && basename "${f}"
	done
}

# try to remove the kernel symlink
remove_symlink() {
	rm "${ROOT}/usr/src/linux"
}

# set the kernel symlink
set_symlink() {
	local target=${1}
	if is_number "${target}" ; then
		local targets=( $(find_targets) )
		target=${targets[target - 1]}
	fi
	if [[ -z ${target} ]] ; then
		die -q "Target \"${1}\" doesn't appear to be valid!"
	elif [[ -d ${ROOT}/usr/src/${target} ]] ; then
		ln -s "${target}" "${ROOT}/usr/src/linux"
	elif [[ -d ${ROOT}/usr/src/linux-${target} ]] ; then
		ln -s "linux-${target}" "${ROOT}/usr/src/linux"
	else
		die -q "Target \"$1\" doesn't appear to be valid!"
	fi
}

### show action ###

describe_show() {
	echo "Show the current kernel symlink"
}

do_show() {
	write_list_start "Current kernel symlink:"
	if [[ -L ${ROOT}/usr/src/linux ]] ; then
		local kernel=$(canonicalise "${ROOT}/usr/src/linux")
		write_kv_list_entry "${kernel%/}" ""
	else
		write_kv_list_entry "(unset)" ""
	fi
}

### list action ###

describe_list() {
	echo "List available kernel symlink targets"
}

do_list() {
	local targets=( $(find_targets) )
	write_list_start "Available kernel symlink targets:"
	if [[ -n ${targets[@]} ]] ; then
		local i
		for (( i = 0; i < ${#targets[@]}; i++ )) ; do
			[[ ${targets[i]} = \
				$(basename "$(canonicalise "${ROOT}/usr/src/linux")") ]] \
				&& targets[i]="${targets[${i}]} $(highlight '*')"
		done
		write_numbered_list "${targets[@]}"
	else
		write_kv_list_entry "(none found)" ""
	fi
}

### set action ###

describe_set() {
	echo "Set a new kernel symlink target"
}

describe_set_parameters() {
	echo "<target>"
}

describe_set_options() {
	echo "target : Target name or number (from 'list' action)"
}

do_set() {
	if [[ -z ${1} ]] ; then
		# no parameter
		die -q "You didn't tell me what to set the symlink to"
	elif [[ -L ${ROOT}/usr/src/linux ]] ; then
		# existing symlink
		if ! remove_symlink ; then
			die -q "Couldn't remove existing symlink"
		elif ! set_symlink "${1}" ; then
			die -q "Couldn't set a new symlink"
		fi
	elif [[ -e ${ROOT}/usr/src/linux ]] ; then
		# we have something strange
		die -q "${ROOT}/usr/src/linux exists but is not a symlink"
	else
		set_symlink "${1}" || die -q "Couldn't set a new symlink"
	fi
}

# vim: set ft=eselect :
